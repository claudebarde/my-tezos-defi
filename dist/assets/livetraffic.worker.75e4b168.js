(function(){"use strict";class P extends Error{constructor(e,t){const n=new.target.prototype;super(`${e}: Status code '${t}'`),this.statusCode=t,this.__proto__=n}}class I extends Error{constructor(e="A timeout occurred."){const t=new.target.prototype;super(e),this.__proto__=t}}class L extends Error{constructor(e="An abort occurred."){const t=new.target.prototype;super(e),this.__proto__=t}}class V extends Error{constructor(e,t){const n=new.target.prototype;super(e),this.transport=t,this.errorType="UnsupportedTransportError",this.__proto__=n}}class q extends Error{constructor(e,t){const n=new.target.prototype;super(e),this.transport=t,this.errorType="DisabledTransportError",this.__proto__=n}}class J extends Error{constructor(e,t){const n=new.target.prototype;super(e),this.transport=t,this.errorType="FailedToStartTransportError",this.__proto__=n}}class G extends Error{constructor(e){const t=new.target.prototype;super(e),this.errorType="FailedToNegotiateWithServerError",this.__proto__=t}}class Q extends Error{constructor(e,t){const n=new.target.prototype;super(e),this.innerErrors=t,this.__proto__=n}}class z{constructor(e,t,n){this.statusCode=e,this.statusText=t,this.content=n}}class R{get(e,t){return this.send({...t,method:"GET",url:e})}post(e,t){return this.send({...t,method:"POST",url:e})}delete(e,t){return this.send({...t,method:"DELETE",url:e})}getCookieString(e){return""}}function U(r){throw new Error('Could not dynamically require "'+r+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}var i;(function(r){r[r.Trace=0]="Trace",r[r.Debug=1]="Debug",r[r.Information=2]="Information",r[r.Warning=3]="Warning",r[r.Error=4]="Error",r[r.Critical=5]="Critical",r[r.None=6]="None"})(i||(i={}));class k{constructor(){}log(e,t){}}k.instance=new k;const O="6.0.8";class p{static isRequired(e,t){if(e==null)throw new Error(`The '${t}' argument is required.`)}static isNotEmpty(e,t){if(!e||e.match(/^\s*$/))throw new Error(`The '${t}' argument should not be empty.`)}static isIn(e,t,n){if(!(e in t))throw new Error(`Unknown ${n} value: ${e}.`)}}class _{static get isBrowser(){return typeof window=="object"&&typeof window.document=="object"}static get isWebWorker(){return typeof self=="object"&&"importScripts"in self}static get isReactNative(){return typeof window=="object"&&typeof window.document>"u"}static get isNode(){return!this.isBrowser&&!this.isWebWorker&&!this.isReactNative}}function v(r,e){let t="";return x(r)?(t=`Binary data of length ${r.byteLength}`,e&&(t+=`. Content: '${ee(r)}'`)):typeof r=="string"&&(t=`String data of length ${r.length}`,e&&(t+=`. Content: '${r}'`)),t}function ee(r){const e=new Uint8Array(r);let t="";return e.forEach(n=>{t+=`0x${n<16?"0":""}${n.toString(16)} `}),t.substr(0,t.length-1)}function x(r){return r&&typeof ArrayBuffer<"u"&&(r instanceof ArrayBuffer||r.constructor&&r.constructor.name==="ArrayBuffer")}async function Y(r,e,t,n,o,s,a){let l={};if(o){const D=await o();D&&(l={Authorization:`Bearer ${D}`})}const[c,h]=E();l[c]=h,r.log(i.Trace,`(${e} transport) sending data. ${v(s,a.logMessageContent)}.`);const g=x(s)?"arraybuffer":"text",b=await t.post(n,{content:s,headers:{...l,...a.headers},responseType:g,timeout:a.timeout,withCredentials:a.withCredentials});r.log(i.Trace,`(${e} transport) request complete. Response status: ${b.statusCode}.`)}function te(r){return r===void 0?new K(i.Information):r===null?k.instance:r.log!==void 0?r:new K(r)}class ne{constructor(e,t){this._subject=e,this._observer=t}dispose(){const e=this._subject.observers.indexOf(this._observer);e>-1&&this._subject.observers.splice(e,1),this._subject.observers.length===0&&this._subject.cancelCallback&&this._subject.cancelCallback().catch(t=>{})}}class K{constructor(e){this._minLevel=e,this.out=console}log(e,t){if(e>=this._minLevel){const n=`[${new Date().toISOString()}] ${i[e]}: ${t}`;switch(e){case i.Critical:case i.Error:this.out.error(n);break;case i.Warning:this.out.warn(n);break;case i.Information:this.out.info(n);break;default:this.out.log(n);break}}}}function E(){let r="X-SignalR-User-Agent";return _.isNode&&(r="User-Agent"),[r,oe(O,re(),ie(),se())]}function oe(r,e,t,n){let o="Microsoft SignalR/";const s=r.split(".");return o+=`${s[0]}.${s[1]}`,o+=` (${r}; `,e&&e!==""?o+=`${e}; `:o+="Unknown OS; ",o+=`${t}`,n?o+=`; ${n}`:o+="; Unknown Runtime Version",o+=")",o}function re(){if(_.isNode)switch(process.platform){case"win32":return"Windows NT";case"darwin":return"macOS";case"linux":return"Linux";default:return process.platform}else return""}function se(){if(_.isNode)return process.versions.node}function ie(){return _.isNode?"NodeJS":"Browser"}function B(r){return r.stack?r.stack:r.message?r.message:`${r}`}function ae(){if(typeof globalThis<"u")return globalThis;if(typeof self<"u")return self;if(typeof window<"u")return window;if(typeof{}<"u")return{};throw new Error("could not find {}")}class ce extends R{constructor(e){if(super(),this._logger=e,typeof fetch>"u"){const t=typeof __webpack_require__=="function"?__non_webpack_require__:U;this._jar=new(t("tough-cookie")).CookieJar,this._fetchType=t("node-fetch"),this._fetchType=t("fetch-cookie")(this._fetchType,this._jar)}else this._fetchType=fetch.bind(ae());if(typeof AbortController>"u"){const t=typeof __webpack_require__=="function"?__non_webpack_require__:U;this._abortControllerType=t("abort-controller")}else this._abortControllerType=AbortController}async send(e){if(e.abortSignal&&e.abortSignal.aborted)throw new L;if(!e.method)throw new Error("No method defined.");if(!e.url)throw new Error("No url defined.");const t=new this._abortControllerType;let n;e.abortSignal&&(e.abortSignal.onabort=()=>{t.abort(),n=new L});let o=null;if(e.timeout){const c=e.timeout;o=setTimeout(()=>{t.abort(),this._logger.log(i.Warning,"Timeout from HTTP request."),n=new I},c)}let s;try{s=await this._fetchType(e.url,{body:e.content,cache:"no-cache",credentials:e.withCredentials===!0?"include":"same-origin",headers:{"Content-Type":"text/plain;charset=UTF-8","X-Requested-With":"XMLHttpRequest",...e.headers},method:e.method,mode:"cors",redirect:"follow",signal:t.signal})}catch(c){throw n||(this._logger.log(i.Warning,`Error from HTTP request. ${c}.`),c)}finally{o&&clearTimeout(o),e.abortSignal&&(e.abortSignal.onabort=null)}if(!s.ok){const c=await $(s,"text");throw new P(c||s.statusText,s.status)}const l=await $(s,e.responseType);return new z(s.status,s.statusText,l)}getCookieString(e){let t="";return _.isNode&&this._jar&&this._jar.getCookies(e,(n,o)=>t=o.join("; ")),t}}function $(r,e){let t;switch(e){case"arraybuffer":t=r.arrayBuffer();break;case"text":t=r.text();break;case"blob":case"document":case"json":throw new Error(`${e} is not supported.`);default:t=r.text();break}return t}class le extends R{constructor(e){super(),this._logger=e}send(e){return e.abortSignal&&e.abortSignal.aborted?Promise.reject(new L):e.method?e.url?new Promise((t,n)=>{const o=new XMLHttpRequest;o.open(e.method,e.url,!0),o.withCredentials=e.withCredentials===void 0?!0:e.withCredentials,o.setRequestHeader("X-Requested-With","XMLHttpRequest"),o.setRequestHeader("Content-Type","text/plain;charset=UTF-8");const s=e.headers;s&&Object.keys(s).forEach(a=>{o.setRequestHeader(a,s[a])}),e.responseType&&(o.responseType=e.responseType),e.abortSignal&&(e.abortSignal.onabort=()=>{o.abort(),n(new L)}),e.timeout&&(o.timeout=e.timeout),o.onload=()=>{e.abortSignal&&(e.abortSignal.onabort=null),o.status>=200&&o.status<300?t(new z(o.status,o.statusText,o.response||o.responseText)):n(new P(o.response||o.responseText||o.statusText,o.status))},o.onerror=()=>{this._logger.log(i.Warning,`Error from HTTP request. ${o.status}: ${o.statusText}.`),n(new P(o.statusText,o.status))},o.ontimeout=()=>{this._logger.log(i.Warning,"Timeout from HTTP request."),n(new I)},o.send(e.content||"")}):Promise.reject(new Error("No url defined.")):Promise.reject(new Error("No method defined."))}}class he extends R{constructor(e){if(super(),typeof fetch<"u"||_.isNode)this._httpClient=new ce(e);else if(typeof XMLHttpRequest<"u")this._httpClient=new le(e);else throw new Error("No usable HttpClient found.")}send(e){return e.abortSignal&&e.abortSignal.aborted?Promise.reject(new L):e.method?e.url?this._httpClient.send(e):Promise.reject(new Error("No url defined.")):Promise.reject(new Error("No method defined."))}getCookieString(e){return this._httpClient.getCookieString(e)}}class T{static write(e){return`${e}${T.RecordSeparator}`}static parse(e){if(e[e.length-1]!==T.RecordSeparator)throw new Error("Message is incomplete.");const t=e.split(T.RecordSeparator);return t.pop(),t}}T.RecordSeparatorCode=30,T.RecordSeparator=String.fromCharCode(T.RecordSeparatorCode);class ue{writeHandshakeRequest(e){return T.write(JSON.stringify(e))}parseHandshakeResponse(e){let t,n;if(x(e)){const l=new Uint8Array(e),c=l.indexOf(T.RecordSeparatorCode);if(c===-1)throw new Error("Message is incomplete.");const h=c+1;t=String.fromCharCode.apply(null,Array.prototype.slice.call(l.slice(0,h))),n=l.byteLength>h?l.slice(h).buffer:null}else{const l=e,c=l.indexOf(T.RecordSeparator);if(c===-1)throw new Error("Message is incomplete.");const h=c+1;t=l.substring(0,h),n=l.length>h?l.substring(h):null}const o=T.parse(t),s=JSON.parse(o[0]);if(s.type)throw new Error("Expected a handshake response from the server.");return[n,s]}}var u;(function(r){r[r.Invocation=1]="Invocation",r[r.StreamItem=2]="StreamItem",r[r.Completion=3]="Completion",r[r.StreamInvocation=4]="StreamInvocation",r[r.CancelInvocation=5]="CancelInvocation",r[r.Ping=6]="Ping",r[r.Close=7]="Close"})(u||(u={}));class de{constructor(){this.observers=[]}next(e){for(const t of this.observers)t.next(e)}error(e){for(const t of this.observers)t.error&&t.error(e)}complete(){for(const e of this.observers)e.complete&&e.complete()}subscribe(e){return this.observers.push(e),new ne(this,e)}}const ge=30*1e3,pe=15*1e3;var d;(function(r){r.Disconnected="Disconnected",r.Connecting="Connecting",r.Connected="Connected",r.Disconnecting="Disconnecting",r.Reconnecting="Reconnecting"})(d||(d={}));class H{constructor(e,t,n,o){this._nextKeepAlive=0,this._freezeEventListener=()=>{this._logger.log(i.Warning,"The page is being frozen, this will likely lead to the connection being closed and messages being lost. For more information see the docs at https://docs.microsoft.com/aspnet/core/signalr/javascript-client#bsleep")},p.isRequired(e,"connection"),p.isRequired(t,"logger"),p.isRequired(n,"protocol"),this.serverTimeoutInMilliseconds=ge,this.keepAliveIntervalInMilliseconds=pe,this._logger=t,this._protocol=n,this.connection=e,this._reconnectPolicy=o,this._handshakeProtocol=new ue,this.connection.onreceive=s=>this._processIncomingData(s),this.connection.onclose=s=>this._connectionClosed(s),this._callbacks={},this._methods={},this._closedCallbacks=[],this._reconnectingCallbacks=[],this._reconnectedCallbacks=[],this._invocationId=0,this._receivedHandshakeResponse=!1,this._connectionState=d.Disconnected,this._connectionStarted=!1,this._cachedPingMessage=this._protocol.writeMessage({type:u.Ping})}static create(e,t,n,o){return new H(e,t,n,o)}get state(){return this._connectionState}get connectionId(){return this.connection&&this.connection.connectionId||null}get baseUrl(){return this.connection.baseUrl||""}set baseUrl(e){if(this._connectionState!==d.Disconnected&&this._connectionState!==d.Reconnecting)throw new Error("The HubConnection must be in the Disconnected or Reconnecting state to change the url.");if(!e)throw new Error("The HubConnection url must be a valid url.");this.connection.baseUrl=e}start(){return this._startPromise=this._startWithStateTransitions(),this._startPromise}async _startWithStateTransitions(){if(this._connectionState!==d.Disconnected)return Promise.reject(new Error("Cannot start a HubConnection that is not in the 'Disconnected' state."));this._connectionState=d.Connecting,this._logger.log(i.Debug,"Starting HubConnection.");try{await this._startInternal(),_.isBrowser&&window.document.addEventListener("freeze",this._freezeEventListener),this._connectionState=d.Connected,this._connectionStarted=!0,this._logger.log(i.Debug,"HubConnection connected successfully.")}catch(e){return this._connectionState=d.Disconnected,this._logger.log(i.Debug,`HubConnection failed to start successfully because of error '${e}'.`),Promise.reject(e)}}async _startInternal(){this._stopDuringStartError=void 0,this._receivedHandshakeResponse=!1;const e=new Promise((t,n)=>{this._handshakeResolver=t,this._handshakeRejecter=n});await this.connection.start(this._protocol.transferFormat);try{const t={protocol:this._protocol.name,version:this._protocol.version};if(this._logger.log(i.Debug,"Sending handshake request."),await this._sendMessage(this._handshakeProtocol.writeHandshakeRequest(t)),this._logger.log(i.Information,`Using HubProtocol '${this._protocol.name}'.`),this._cleanupTimeout(),this._resetTimeoutPeriod(),this._resetKeepAliveInterval(),await e,this._stopDuringStartError)throw this._stopDuringStartError}catch(t){throw this._logger.log(i.Debug,`Hub handshake failed with error '${t}' during start(). Stopping HubConnection.`),this._cleanupTimeout(),this._cleanupPingTimer(),await this.connection.stop(t),t}}async stop(){const e=this._startPromise;this._stopPromise=this._stopInternal(),await this._stopPromise;try{await e}catch{}}_stopInternal(e){return this._connectionState===d.Disconnected?(this._logger.log(i.Debug,`Call to HubConnection.stop(${e}) ignored because it is already in the disconnected state.`),Promise.resolve()):this._connectionState===d.Disconnecting?(this._logger.log(i.Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnecting state.`),this._stopPromise):(this._connectionState=d.Disconnecting,this._logger.log(i.Debug,"Stopping HubConnection."),this._reconnectDelayHandle?(this._logger.log(i.Debug,"Connection stopped during reconnect delay. Done reconnecting."),clearTimeout(this._reconnectDelayHandle),this._reconnectDelayHandle=void 0,this._completeClose(),Promise.resolve()):(this._cleanupTimeout(),this._cleanupPingTimer(),this._stopDuringStartError=e||new Error("The connection was stopped before the hub handshake could complete."),this.connection.stop(e)))}stream(e,...t){const[n,o]=this._replaceStreamingParams(t),s=this._createStreamInvocation(e,t,o);let a;const l=new de;return l.cancelCallback=()=>{const c=this._createCancelInvocation(s.invocationId);return delete this._callbacks[s.invocationId],a.then(()=>this._sendWithProtocol(c))},this._callbacks[s.invocationId]=(c,h)=>{if(h){l.error(h);return}else c&&(c.type===u.Completion?c.error?l.error(new Error(c.error)):l.complete():l.next(c.item))},a=this._sendWithProtocol(s).catch(c=>{l.error(c),delete this._callbacks[s.invocationId]}),this._launchStreams(n,a),l}_sendMessage(e){return this._resetKeepAliveInterval(),this.connection.send(e)}_sendWithProtocol(e){return this._sendMessage(this._protocol.writeMessage(e))}send(e,...t){const[n,o]=this._replaceStreamingParams(t),s=this._sendWithProtocol(this._createInvocation(e,t,!0,o));return this._launchStreams(n,s),s}invoke(e,...t){const[n,o]=this._replaceStreamingParams(t),s=this._createInvocation(e,t,!1,o);return new Promise((l,c)=>{this._callbacks[s.invocationId]=(g,b)=>{if(b){c(b);return}else g&&(g.type===u.Completion?g.error?c(new Error(g.error)):l(g.result):c(new Error(`Unexpected message type: ${g.type}`)))};const h=this._sendWithProtocol(s).catch(g=>{c(g),delete this._callbacks[s.invocationId]});this._launchStreams(n,h)})}on(e,t){!e||!t||(e=e.toLowerCase(),this._methods[e]||(this._methods[e]=[]),this._methods[e].indexOf(t)===-1&&this._methods[e].push(t))}off(e,t){if(!e)return;e=e.toLowerCase();const n=this._methods[e];if(!!n)if(t){const o=n.indexOf(t);o!==-1&&(n.splice(o,1),n.length===0&&delete this._methods[e])}else delete this._methods[e]}onclose(e){e&&this._closedCallbacks.push(e)}onreconnecting(e){e&&this._reconnectingCallbacks.push(e)}onreconnected(e){e&&this._reconnectedCallbacks.push(e)}_processIncomingData(e){if(this._cleanupTimeout(),this._receivedHandshakeResponse||(e=this._processHandshakeResponse(e),this._receivedHandshakeResponse=!0),e){const t=this._protocol.parseMessages(e,this._logger);for(const n of t)switch(n.type){case u.Invocation:this._invokeClientMethod(n);break;case u.StreamItem:case u.Completion:{const o=this._callbacks[n.invocationId];if(o){n.type===u.Completion&&delete this._callbacks[n.invocationId];try{o(n)}catch(s){this._logger.log(i.Error,`Stream callback threw error: ${B(s)}`)}}break}case u.Ping:break;case u.Close:{this._logger.log(i.Information,"Close message received from server.");const o=n.error?new Error("Server returned an error on close: "+n.error):void 0;n.allowReconnect===!0?this.connection.stop(o):this._stopPromise=this._stopInternal(o);break}default:this._logger.log(i.Warning,`Invalid message type: ${n.type}.`);break}}this._resetTimeoutPeriod()}_processHandshakeResponse(e){let t,n;try{[n,t]=this._handshakeProtocol.parseHandshakeResponse(e)}catch(o){const s="Error parsing handshake response: "+o;this._logger.log(i.Error,s);const a=new Error(s);throw this._handshakeRejecter(a),a}if(t.error){const o="Server returned handshake error: "+t.error;this._logger.log(i.Error,o);const s=new Error(o);throw this._handshakeRejecter(s),s}else this._logger.log(i.Debug,"Server handshake complete.");return this._handshakeResolver(),n}_resetKeepAliveInterval(){this.connection.features.inherentKeepAlive||(this._nextKeepAlive=new Date().getTime()+this.keepAliveIntervalInMilliseconds,this._cleanupPingTimer())}_resetTimeoutPeriod(){if((!this.connection.features||!this.connection.features.inherentKeepAlive)&&(this._timeoutHandle=setTimeout(()=>this.serverTimeout(),this.serverTimeoutInMilliseconds),this._pingServerHandle===void 0)){let e=this._nextKeepAlive-new Date().getTime();e<0&&(e=0),this._pingServerHandle=setTimeout(async()=>{if(this._connectionState===d.Connected)try{await this._sendMessage(this._cachedPingMessage)}catch{this._cleanupPingTimer()}},e)}}serverTimeout(){this.connection.stop(new Error("Server timeout elapsed without receiving a message from the server."))}_invokeClientMethod(e){const t=this._methods[e.target.toLowerCase()];if(t){try{t.forEach(n=>n.apply(this,e.arguments))}catch(n){this._logger.log(i.Error,`A callback for the method ${e.target.toLowerCase()} threw error '${n}'.`)}if(e.invocationId){const n="Server requested a response, which is not supported in this version of the client.";this._logger.log(i.Error,n),this._stopPromise=this._stopInternal(new Error(n))}}else this._logger.log(i.Warning,`No client method with the name '${e.target}' found.`)}_connectionClosed(e){this._logger.log(i.Debug,`HubConnection.connectionClosed(${e}) called while in state ${this._connectionState}.`),this._stopDuringStartError=this._stopDuringStartError||e||new Error("The underlying connection was closed before the hub handshake could complete."),this._handshakeResolver&&this._handshakeResolver(),this._cancelCallbacksWithError(e||new Error("Invocation canceled due to the underlying connection being closed.")),this._cleanupTimeout(),this._cleanupPingTimer(),this._connectionState===d.Disconnecting?this._completeClose(e):this._connectionState===d.Connected&&this._reconnectPolicy?this._reconnect(e):this._connectionState===d.Connected&&this._completeClose(e)}_completeClose(e){if(this._connectionStarted){this._connectionState=d.Disconnected,this._connectionStarted=!1,_.isBrowser&&window.document.removeEventListener("freeze",this._freezeEventListener);try{this._closedCallbacks.forEach(t=>t.apply(this,[e]))}catch(t){this._logger.log(i.Error,`An onclose callback called with error '${e}' threw error '${t}'.`)}}}async _reconnect(e){const t=Date.now();let n=0,o=e!==void 0?e:new Error("Attempting to reconnect due to a unknown error."),s=this._getNextRetryDelay(n++,0,o);if(s===null){this._logger.log(i.Debug,"Connection not reconnecting because the IRetryPolicy returned null on the first reconnect attempt."),this._completeClose(e);return}if(this._connectionState=d.Reconnecting,e?this._logger.log(i.Information,`Connection reconnecting because of error '${e}'.`):this._logger.log(i.Information,"Connection reconnecting."),this._reconnectingCallbacks.length!==0){try{this._reconnectingCallbacks.forEach(a=>a.apply(this,[e]))}catch(a){this._logger.log(i.Error,`An onreconnecting callback called with error '${e}' threw error '${a}'.`)}if(this._connectionState!==d.Reconnecting){this._logger.log(i.Debug,"Connection left the reconnecting state in onreconnecting callback. Done reconnecting.");return}}for(;s!==null;){if(this._logger.log(i.Information,`Reconnect attempt number ${n} will start in ${s} ms.`),await new Promise(a=>{this._reconnectDelayHandle=setTimeout(a,s)}),this._reconnectDelayHandle=void 0,this._connectionState!==d.Reconnecting){this._logger.log(i.Debug,"Connection left the reconnecting state during reconnect delay. Done reconnecting.");return}try{if(await this._startInternal(),this._connectionState=d.Connected,this._logger.log(i.Information,"HubConnection reconnected successfully."),this._reconnectedCallbacks.length!==0)try{this._reconnectedCallbacks.forEach(a=>a.apply(this,[this.connection.connectionId]))}catch(a){this._logger.log(i.Error,`An onreconnected callback called with connectionId '${this.connection.connectionId}; threw error '${a}'.`)}return}catch(a){if(this._logger.log(i.Information,`Reconnect attempt failed because of error '${a}'.`),this._connectionState!==d.Reconnecting){this._logger.log(i.Debug,`Connection moved to the '${this._connectionState}' from the reconnecting state during reconnect attempt. Done reconnecting.`),this._connectionState===d.Disconnecting&&this._completeClose();return}o=a instanceof Error?a:new Error(a.toString()),s=this._getNextRetryDelay(n++,Date.now()-t,o)}}this._logger.log(i.Information,`Reconnect retries have been exhausted after ${Date.now()-t} ms and ${n} failed attempts. Connection disconnecting.`),this._completeClose()}_getNextRetryDelay(e,t,n){try{return this._reconnectPolicy.nextRetryDelayInMilliseconds({elapsedMilliseconds:t,previousRetryCount:e,retryReason:n})}catch(o){return this._logger.log(i.Error,`IRetryPolicy.nextRetryDelayInMilliseconds(${e}, ${t}) threw error '${o}'.`),null}}_cancelCallbacksWithError(e){const t=this._callbacks;this._callbacks={},Object.keys(t).forEach(n=>{const o=t[n];try{o(null,e)}catch(s){this._logger.log(i.Error,`Stream 'error' callback called with '${e}' threw error: ${B(s)}`)}})}_cleanupPingTimer(){this._pingServerHandle&&(clearTimeout(this._pingServerHandle),this._pingServerHandle=void 0)}_cleanupTimeout(){this._timeoutHandle&&clearTimeout(this._timeoutHandle)}_createInvocation(e,t,n,o){if(n)return o.length!==0?{arguments:t,streamIds:o,target:e,type:u.Invocation}:{arguments:t,target:e,type:u.Invocation};{const s=this._invocationId;return this._invocationId++,o.length!==0?{arguments:t,invocationId:s.toString(),streamIds:o,target:e,type:u.Invocation}:{arguments:t,invocationId:s.toString(),target:e,type:u.Invocation}}}_launchStreams(e,t){if(e.length!==0){t||(t=Promise.resolve());for(const n in e)e[n].subscribe({complete:()=>{t=t.then(()=>this._sendWithProtocol(this._createCompletionMessage(n)))},error:o=>{let s;o instanceof Error?s=o.message:o&&o.toString?s=o.toString():s="Unknown error",t=t.then(()=>this._sendWithProtocol(this._createCompletionMessage(n,s)))},next:o=>{t=t.then(()=>this._sendWithProtocol(this._createStreamItemMessage(n,o)))}})}}_replaceStreamingParams(e){const t=[],n=[];for(let o=0;o<e.length;o++){const s=e[o];if(this._isObservable(s)){const a=this._invocationId;this._invocationId++,t[a]=s,n.push(a.toString()),e.splice(o,1)}}return[t,n]}_isObservable(e){return e&&e.subscribe&&typeof e.subscribe=="function"}_createStreamInvocation(e,t,n){const o=this._invocationId;return this._invocationId++,n.length!==0?{arguments:t,invocationId:o.toString(),streamIds:n,target:e,type:u.StreamInvocation}:{arguments:t,invocationId:o.toString(),target:e,type:u.StreamInvocation}}_createCancelInvocation(e){return{invocationId:e,type:u.CancelInvocation}}_createStreamItemMessage(e,t){return{invocationId:e,item:t,type:u.StreamItem}}_createCompletionMessage(e,t,n){return t?{error:t,invocationId:e,type:u.Completion}:{invocationId:e,result:n,type:u.Completion}}}const fe=[0,2e3,1e4,3e4,null];class X{constructor(e){this._retryDelays=e!==void 0?[...e,null]:fe}nextRetryDelayInMilliseconds(e){return this._retryDelays[e.previousRetryCount]}}class C{}C.Authorization="Authorization",C.Cookie="Cookie";var f;(function(r){r[r.None=0]="None",r[r.WebSockets=1]="WebSockets",r[r.ServerSentEvents=2]="ServerSentEvents",r[r.LongPolling=4]="LongPolling"})(f||(f={}));var w;(function(r){r[r.Text=1]="Text",r[r.Binary=2]="Binary"})(w||(w={}));class _e{constructor(){this._isAborted=!1,this.onabort=null}abort(){this._isAborted||(this._isAborted=!0,this.onabort&&this.onabort())}get signal(){return this}get aborted(){return this._isAborted}}class j{constructor(e,t,n,o){this._httpClient=e,this._accessTokenFactory=t,this._logger=n,this._pollAbort=new _e,this._options=o,this._running=!1,this.onreceive=null,this.onclose=null}get pollAborted(){return this._pollAbort.aborted}async connect(e,t){if(p.isRequired(e,"url"),p.isRequired(t,"transferFormat"),p.isIn(t,w,"transferFormat"),this._url=e,this._logger.log(i.Trace,"(LongPolling transport) Connecting."),t===w.Binary&&typeof XMLHttpRequest<"u"&&typeof new XMLHttpRequest().responseType!="string")throw new Error("Binary protocols over XmlHttpRequest not implementing advanced features are not supported.");const[n,o]=E(),s={[n]:o,...this._options.headers},a={abortSignal:this._pollAbort.signal,headers:s,timeout:1e5,withCredentials:this._options.withCredentials};t===w.Binary&&(a.responseType="arraybuffer");const l=await this._getAccessToken();this._updateHeaderToken(a,l);const c=`${e}&_=${Date.now()}`;this._logger.log(i.Trace,`(LongPolling transport) polling: ${c}.`);const h=await this._httpClient.get(c,a);h.statusCode!==200?(this._logger.log(i.Error,`(LongPolling transport) Unexpected response code: ${h.statusCode}.`),this._closeError=new P(h.statusText||"",h.statusCode),this._running=!1):this._running=!0,this._receiving=this._poll(this._url,a)}async _getAccessToken(){return this._accessTokenFactory?await this._accessTokenFactory():null}_updateHeaderToken(e,t){if(e.headers||(e.headers={}),t){e.headers[C.Authorization]=`Bearer ${t}`;return}e.headers[C.Authorization]&&delete e.headers[C.Authorization]}async _poll(e,t){try{for(;this._running;){const n=await this._getAccessToken();this._updateHeaderToken(t,n);try{const o=`${e}&_=${Date.now()}`;this._logger.log(i.Trace,`(LongPolling transport) polling: ${o}.`);const s=await this._httpClient.get(o,t);s.statusCode===204?(this._logger.log(i.Information,"(LongPolling transport) Poll terminated by server."),this._running=!1):s.statusCode!==200?(this._logger.log(i.Error,`(LongPolling transport) Unexpected response code: ${s.statusCode}.`),this._closeError=new P(s.statusText||"",s.statusCode),this._running=!1):s.content?(this._logger.log(i.Trace,`(LongPolling transport) data received. ${v(s.content,this._options.logMessageContent)}.`),this.onreceive&&this.onreceive(s.content)):this._logger.log(i.Trace,"(LongPolling transport) Poll timed out, reissuing.")}catch(o){this._running?o instanceof I?this._logger.log(i.Trace,"(LongPolling transport) Poll timed out, reissuing."):(this._closeError=o,this._running=!1):this._logger.log(i.Trace,`(LongPolling transport) Poll errored after shutdown: ${o.message}`)}}}finally{this._logger.log(i.Trace,"(LongPolling transport) Polling complete."),this.pollAborted||this._raiseOnClose()}}async send(e){return this._running?Y(this._logger,"LongPolling",this._httpClient,this._url,this._accessTokenFactory,e,this._options):Promise.reject(new Error("Cannot send until the transport is connected"))}async stop(){this._logger.log(i.Trace,"(LongPolling transport) Stopping polling."),this._running=!1,this._pollAbort.abort();try{await this._receiving,this._logger.log(i.Trace,`(LongPolling transport) sending DELETE request to ${this._url}.`);const e={},[t,n]=E();e[t]=n;const o={headers:{...e,...this._options.headers},timeout:this._options.timeout,withCredentials:this._options.withCredentials},s=await this._getAccessToken();this._updateHeaderToken(o,s),await this._httpClient.delete(this._url,o),this._logger.log(i.Trace,"(LongPolling transport) DELETE request sent.")}finally{this._logger.log(i.Trace,"(LongPolling transport) Stop finished."),this._raiseOnClose()}}_raiseOnClose(){if(this.onclose){let e="(LongPolling transport) Firing onclose event.";this._closeError&&(e+=" Error: "+this._closeError),this._logger.log(i.Trace,e),this.onclose(this._closeError)}}}class we{constructor(e,t,n,o){this._httpClient=e,this._accessTokenFactory=t,this._logger=n,this._options=o,this.onreceive=null,this.onclose=null}async connect(e,t){if(p.isRequired(e,"url"),p.isRequired(t,"transferFormat"),p.isIn(t,w,"transferFormat"),this._logger.log(i.Trace,"(SSE transport) Connecting."),this._url=e,this._accessTokenFactory){const n=await this._accessTokenFactory();n&&(e+=(e.indexOf("?")<0?"?":"&")+`access_token=${encodeURIComponent(n)}`)}return new Promise((n,o)=>{let s=!1;if(t!==w.Text){o(new Error("The Server-Sent Events transport only supports the 'Text' transfer format"));return}let a;if(_.isBrowser||_.isWebWorker)a=new this._options.EventSource(e,{withCredentials:this._options.withCredentials});else{const l=this._httpClient.getCookieString(e),c={};c.Cookie=l;const[h,g]=E();c[h]=g,a=new this._options.EventSource(e,{withCredentials:this._options.withCredentials,headers:{...c,...this._options.headers}})}try{a.onmessage=l=>{if(this.onreceive)try{this._logger.log(i.Trace,`(SSE transport) data received. ${v(l.data,this._options.logMessageContent)}.`),this.onreceive(l.data)}catch(c){this._close(c);return}},a.onerror=l=>{s?this._close():o(new Error("EventSource failed to connect. The connection could not be found on the server, either the connection ID is not present on the server, or a proxy is refusing/buffering the connection. If you have multiple servers check that sticky sessions are enabled."))},a.onopen=()=>{this._logger.log(i.Information,`SSE connected to ${this._url}`),this._eventSource=a,s=!0,n()}}catch(l){o(l);return}})}async send(e){return this._eventSource?Y(this._logger,"SSE",this._httpClient,this._url,this._accessTokenFactory,e,this._options):Promise.reject(new Error("Cannot send until the transport is connected"))}stop(){return this._close(),Promise.resolve()}_close(e){this._eventSource&&(this._eventSource.close(),this._eventSource=void 0,this.onclose&&this.onclose(e))}}class Te{constructor(e,t,n,o,s,a){this._logger=n,this._accessTokenFactory=t,this._logMessageContent=o,this._webSocketConstructor=s,this._httpClient=e,this.onreceive=null,this.onclose=null,this._headers=a}async connect(e,t){if(p.isRequired(e,"url"),p.isRequired(t,"transferFormat"),p.isIn(t,w,"transferFormat"),this._logger.log(i.Trace,"(WebSockets transport) Connecting."),this._accessTokenFactory){const n=await this._accessTokenFactory();n&&(e+=(e.indexOf("?")<0?"?":"&")+`access_token=${encodeURIComponent(n)}`)}return new Promise((n,o)=>{e=e.replace(/^http/,"ws");let s;const a=this._httpClient.getCookieString(e);let l=!1;if(_.isNode){const c={},[h,g]=E();c[h]=g,a&&(c[C.Cookie]=`${a}`),s=new this._webSocketConstructor(e,void 0,{headers:{...c,...this._headers}})}s||(s=new this._webSocketConstructor(e)),t===w.Binary&&(s.binaryType="arraybuffer"),s.onopen=c=>{this._logger.log(i.Information,`WebSocket connected to ${e}.`),this._webSocket=s,l=!0,n()},s.onerror=c=>{let h=null;typeof ErrorEvent<"u"&&c instanceof ErrorEvent?h=c.error:h="There was an error with the transport",this._logger.log(i.Information,`(WebSockets transport) ${h}.`)},s.onmessage=c=>{if(this._logger.log(i.Trace,`(WebSockets transport) data received. ${v(c.data,this._logMessageContent)}.`),this.onreceive)try{this.onreceive(c.data)}catch(h){this._close(h);return}},s.onclose=c=>{if(l)this._close(c);else{let h=null;typeof ErrorEvent<"u"&&c instanceof ErrorEvent?h=c.error:h="WebSocket failed to connect. The connection could not be found on the server, either the endpoint may not be a SignalR endpoint, the connection ID is not present on the server, or there is a proxy blocking WebSockets. If you have multiple servers check that sticky sessions are enabled.",o(new Error(h))}}})}send(e){return this._webSocket&&this._webSocket.readyState===this._webSocketConstructor.OPEN?(this._logger.log(i.Trace,`(WebSockets transport) sending data. ${v(e,this._logMessageContent)}.`),this._webSocket.send(e),Promise.resolve()):Promise.reject("WebSocket is not in the OPEN state")}stop(){return this._webSocket&&this._close(void 0),Promise.resolve()}_close(e){this._webSocket&&(this._webSocket.onclose=()=>{},this._webSocket.onmessage=()=>{},this._webSocket.onerror=()=>{},this._webSocket.close(),this._webSocket=void 0),this._logger.log(i.Trace,"(WebSockets transport) socket closed."),this.onclose&&(this._isCloseEvent(e)&&(e.wasClean===!1||e.code!==1e3)?this.onclose(new Error(`WebSocket closed with status code: ${e.code} (${e.reason||"no reason given"}).`)):e instanceof Error?this.onclose(e):this.onclose())}_isCloseEvent(e){return e&&typeof e.wasClean=="boolean"&&typeof e.code=="number"}}const F=100;class me{constructor(e,t={}){if(this._stopPromiseResolver=()=>{},this.features={},this._negotiateVersion=1,p.isRequired(e,"url"),this._logger=te(t.logger),this.baseUrl=this._resolveUrl(e),t=t||{},t.logMessageContent=t.logMessageContent===void 0?!1:t.logMessageContent,typeof t.withCredentials=="boolean"||t.withCredentials===void 0)t.withCredentials=t.withCredentials===void 0?!0:t.withCredentials;else throw new Error("withCredentials option was not a 'boolean' or 'undefined' value");t.timeout=t.timeout===void 0?100*1e3:t.timeout;let n=null,o=null;if(_.isNode&&typeof U<"u"){const s=typeof __webpack_require__=="function"?__non_webpack_require__:U;n=s("ws"),o=s("eventsource")}!_.isNode&&typeof WebSocket<"u"&&!t.WebSocket?t.WebSocket=WebSocket:_.isNode&&!t.WebSocket&&n&&(t.WebSocket=n),!_.isNode&&typeof EventSource<"u"&&!t.EventSource?t.EventSource=EventSource:_.isNode&&!t.EventSource&&typeof o<"u"&&(t.EventSource=o),this._httpClient=t.httpClient||new he(this._logger),this._connectionState="Disconnected",this._connectionStarted=!1,this._options=t,this.onreceive=null,this.onclose=null}async start(e){if(e=e||w.Binary,p.isIn(e,w,"transferFormat"),this._logger.log(i.Debug,`Starting connection with transfer format '${w[e]}'.`),this._connectionState!=="Disconnected")return Promise.reject(new Error("Cannot start an HttpConnection that is not in the 'Disconnected' state."));if(this._connectionState="Connecting",this._startInternalPromise=this._startInternal(e),await this._startInternalPromise,this._connectionState==="Disconnecting"){const t="Failed to start the HttpConnection before stop() was called.";return this._logger.log(i.Error,t),await this._stopPromise,Promise.reject(new Error(t))}else if(this._connectionState!=="Connected"){const t="HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!";return this._logger.log(i.Error,t),Promise.reject(new Error(t))}this._connectionStarted=!0}send(e){return this._connectionState!=="Connected"?Promise.reject(new Error("Cannot send data if the connection is not in the 'Connected' State.")):(this._sendQueue||(this._sendQueue=new W(this.transport)),this._sendQueue.send(e))}async stop(e){if(this._connectionState==="Disconnected")return this._logger.log(i.Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnected state.`),Promise.resolve();if(this._connectionState==="Disconnecting")return this._logger.log(i.Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnecting state.`),this._stopPromise;this._connectionState="Disconnecting",this._stopPromise=new Promise(t=>{this._stopPromiseResolver=t}),await this._stopInternal(e),await this._stopPromise}async _stopInternal(e){this._stopError=e;try{await this._startInternalPromise}catch{}if(this.transport){try{await this.transport.stop()}catch(t){this._logger.log(i.Error,`HttpConnection.transport.stop() threw error '${t}'.`),this._stopConnection()}this.transport=void 0}else this._logger.log(i.Debug,"HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.")}async _startInternal(e){let t=this.baseUrl;this._accessTokenFactory=this._options.accessTokenFactory;try{if(this._options.skipNegotiation)if(this._options.transport===f.WebSockets)this.transport=this._constructTransport(f.WebSockets),await this._startTransport(t,e);else throw new Error("Negotiation can only be skipped when using the WebSocket transport directly.");else{let n=null,o=0;do{if(n=await this._getNegotiationResponse(t),this._connectionState==="Disconnecting"||this._connectionState==="Disconnected")throw new Error("The connection was stopped during negotiation.");if(n.error)throw new Error(n.error);if(n.ProtocolVersion)throw new Error("Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.");if(n.url&&(t=n.url),n.accessToken){const s=n.accessToken;this._accessTokenFactory=()=>s}o++}while(n.url&&o<F);if(o===F&&n.url)throw new Error("Negotiate redirection limit exceeded.");await this._createTransport(t,this._options.transport,n,e)}this.transport instanceof j&&(this.features.inherentKeepAlive=!0),this._connectionState==="Connecting"&&(this._logger.log(i.Debug,"The HttpConnection connected successfully."),this._connectionState="Connected")}catch(n){return this._logger.log(i.Error,"Failed to start the connection: "+n),this._connectionState="Disconnected",this.transport=void 0,this._stopPromiseResolver(),Promise.reject(n)}}async _getNegotiationResponse(e){const t={};if(this._accessTokenFactory){const a=await this._accessTokenFactory();a&&(t[C.Authorization]=`Bearer ${a}`)}const[n,o]=E();t[n]=o;const s=this._resolveNegotiateUrl(e);this._logger.log(i.Debug,`Sending negotiation request: ${s}.`);try{const a=await this._httpClient.post(s,{content:"",headers:{...t,...this._options.headers},timeout:this._options.timeout,withCredentials:this._options.withCredentials});if(a.statusCode!==200)return Promise.reject(new Error(`Unexpected status code returned from negotiate '${a.statusCode}'`));const l=JSON.parse(a.content);return(!l.negotiateVersion||l.negotiateVersion<1)&&(l.connectionToken=l.connectionId),l}catch(a){let l="Failed to complete negotiation with the server: "+a;return a instanceof P&&a.statusCode===404&&(l=l+" Either this is not a SignalR endpoint or there is a proxy blocking the connection."),this._logger.log(i.Error,l),Promise.reject(new G(l))}}_createConnectUrl(e,t){return t?e+(e.indexOf("?")===-1?"?":"&")+`id=${t}`:e}async _createTransport(e,t,n,o){let s=this._createConnectUrl(e,n.connectionToken);if(this._isITransport(t)){this._logger.log(i.Debug,"Connection was provided an instance of ITransport, using that directly."),this.transport=t,await this._startTransport(s,o),this.connectionId=n.connectionId;return}const a=[],l=n.availableTransports||[];let c=n;for(const h of l){const g=this._resolveTransportOrError(h,t,o);if(g instanceof Error)a.push(`${h.transport} failed:`),a.push(g);else if(this._isITransport(g)){if(this.transport=g,!c){try{c=await this._getNegotiationResponse(e)}catch(b){return Promise.reject(b)}s=this._createConnectUrl(e,c.connectionToken)}try{await this._startTransport(s,o),this.connectionId=c.connectionId;return}catch(b){if(this._logger.log(i.Error,`Failed to start the transport '${h.transport}': ${b}`),c=void 0,a.push(new J(`${h.transport} failed: ${b}`,f[h.transport])),this._connectionState!=="Connecting"){const D="Failed to select transport before stop() was called.";return this._logger.log(i.Debug,D),Promise.reject(new Error(D))}}}}return a.length>0?Promise.reject(new Q(`Unable to connect to the server with any of the available transports. ${a.join(" ")}`,a)):Promise.reject(new Error("None of the transports supported by the client are supported by the server."))}_constructTransport(e){switch(e){case f.WebSockets:if(!this._options.WebSocket)throw new Error("'WebSocket' is not supported in your environment.");return new Te(this._httpClient,this._accessTokenFactory,this._logger,this._options.logMessageContent,this._options.WebSocket,this._options.headers||{});case f.ServerSentEvents:if(!this._options.EventSource)throw new Error("'EventSource' is not supported in your environment.");return new we(this._httpClient,this._accessTokenFactory,this._logger,this._options);case f.LongPolling:return new j(this._httpClient,this._accessTokenFactory,this._logger,this._options);default:throw new Error(`Unknown transport: ${e}.`)}}_startTransport(e,t){return this.transport.onreceive=this.onreceive,this.transport.onclose=n=>this._stopConnection(n),this.transport.connect(e,t)}_resolveTransportOrError(e,t,n){const o=f[e.transport];if(o==null)return this._logger.log(i.Debug,`Skipping transport '${e.transport}' because it is not supported by this client.`),new Error(`Skipping transport '${e.transport}' because it is not supported by this client.`);if(be(t,o))if(e.transferFormats.map(a=>w[a]).indexOf(n)>=0){if(o===f.WebSockets&&!this._options.WebSocket||o===f.ServerSentEvents&&!this._options.EventSource)return this._logger.log(i.Debug,`Skipping transport '${f[o]}' because it is not supported in your environment.'`),new V(`'${f[o]}' is not supported in your environment.`,o);this._logger.log(i.Debug,`Selecting transport '${f[o]}'.`);try{return this._constructTransport(o)}catch(a){return a}}else return this._logger.log(i.Debug,`Skipping transport '${f[o]}' because it does not support the requested transfer format '${w[n]}'.`),new Error(`'${f[o]}' does not support ${w[n]}.`);else return this._logger.log(i.Debug,`Skipping transport '${f[o]}' because it was disabled by the client.`),new q(`'${f[o]}' is disabled by the client.`,o)}_isITransport(e){return e&&typeof e=="object"&&"connect"in e}_stopConnection(e){if(this._logger.log(i.Debug,`HttpConnection.stopConnection(${e}) called while in state ${this._connectionState}.`),this.transport=void 0,e=this._stopError||e,this._stopError=void 0,this._connectionState==="Disconnected"){this._logger.log(i.Debug,`Call to HttpConnection.stopConnection(${e}) was ignored because the connection is already in the disconnected state.`);return}if(this._connectionState==="Connecting")throw this._logger.log(i.Warning,`Call to HttpConnection.stopConnection(${e}) was ignored because the connection is still in the connecting state.`),new Error(`HttpConnection.stopConnection(${e}) was called while the connection is still in the connecting state.`);if(this._connectionState==="Disconnecting"&&this._stopPromiseResolver(),e?this._logger.log(i.Error,`Connection disconnected with error '${e}'.`):this._logger.log(i.Information,"Connection disconnected."),this._sendQueue&&(this._sendQueue.stop().catch(t=>{this._logger.log(i.Error,`TransportSendQueue.stop() threw error '${t}'.`)}),this._sendQueue=void 0),this.connectionId=void 0,this._connectionState="Disconnected",this._connectionStarted){this._connectionStarted=!1;try{this.onclose&&this.onclose(e)}catch(t){this._logger.log(i.Error,`HttpConnection.onclose(${e}) threw error '${t}'.`)}}}_resolveUrl(e){if(e.lastIndexOf("https://",0)===0||e.lastIndexOf("http://",0)===0)return e;if(!_.isBrowser)throw new Error(`Cannot resolve '${e}'.`);const t=window.document.createElement("a");return t.href=e,this._logger.log(i.Information,`Normalizing '${e}' to '${t.href}'.`),t.href}_resolveNegotiateUrl(e){const t=e.indexOf("?");let n=e.substring(0,t===-1?e.length:t);return n[n.length-1]!=="/"&&(n+="/"),n+="negotiate",n+=t===-1?"":e.substring(t),n.indexOf("negotiateVersion")===-1&&(n+=t===-1?"?":"&",n+="negotiateVersion="+this._negotiateVersion),n}}function be(r,e){return!r||(e&r)!==0}class W{constructor(e){this._transport=e,this._buffer=[],this._executing=!0,this._sendBufferedData=new A,this._transportResult=new A,this._sendLoopPromise=this._sendLoop()}send(e){return this._bufferData(e),this._transportResult||(this._transportResult=new A),this._transportResult.promise}stop(){return this._executing=!1,this._sendBufferedData.resolve(),this._sendLoopPromise}_bufferData(e){if(this._buffer.length&&typeof this._buffer[0]!=typeof e)throw new Error(`Expected data to be of type ${typeof this._buffer} but was of type ${typeof e}`);this._buffer.push(e),this._sendBufferedData.resolve()}async _sendLoop(){for(;;){if(await this._sendBufferedData.promise,!this._executing){this._transportResult&&this._transportResult.reject("Connection stopped.");break}this._sendBufferedData=new A;const e=this._transportResult;this._transportResult=void 0;const t=typeof this._buffer[0]=="string"?this._buffer.join(""):W._concatBuffers(this._buffer);this._buffer.length=0;try{await this._transport.send(t),e.resolve()}catch(n){e.reject(n)}}}static _concatBuffers(e){const t=e.map(s=>s.byteLength).reduce((s,a)=>s+a),n=new Uint8Array(t);let o=0;for(const s of e)n.set(new Uint8Array(s),o),o+=s.byteLength;return n.buffer}}class A{constructor(){this.promise=new Promise((e,t)=>[this._resolver,this._rejecter]=[e,t])}resolve(){this._resolver()}reject(e){this._rejecter(e)}}const Ce="json";class Se{constructor(){this.name=Ce,this.version=1,this.transferFormat=w.Text}parseMessages(e,t){if(typeof e!="string")throw new Error("Invalid input for JSON hub protocol. Expected a string.");if(!e)return[];t===null&&(t=k.instance);const n=T.parse(e),o=[];for(const s of n){const a=JSON.parse(s);if(typeof a.type!="number")throw new Error("Invalid payload.");switch(a.type){case u.Invocation:this._isInvocationMessage(a);break;case u.StreamItem:this._isStreamItemMessage(a);break;case u.Completion:this._isCompletionMessage(a);break;case u.Ping:break;case u.Close:break;default:t.log(i.Information,"Unknown message type '"+a.type+"' ignored.");continue}o.push(a)}return o}writeMessage(e){return T.write(JSON.stringify(e))}_isInvocationMessage(e){this._assertNotEmptyString(e.target,"Invalid payload for Invocation message."),e.invocationId!==void 0&&this._assertNotEmptyString(e.invocationId,"Invalid payload for Invocation message.")}_isStreamItemMessage(e){if(this._assertNotEmptyString(e.invocationId,"Invalid payload for StreamItem message."),e.item===void 0)throw new Error("Invalid payload for StreamItem message.")}_isCompletionMessage(e){if(e.result&&e.error)throw new Error("Invalid payload for Completion message.");!e.result&&e.error&&this._assertNotEmptyString(e.error,"Invalid payload for Completion message."),this._assertNotEmptyString(e.invocationId,"Invalid payload for Completion message.")}_assertNotEmptyString(e,t){if(typeof e!="string"||e==="")throw new Error(t)}}const Pe={trace:i.Trace,debug:i.Debug,info:i.Information,information:i.Information,warn:i.Warning,warning:i.Warning,error:i.Error,critical:i.Critical,none:i.None};function Ee(r){const e=Pe[r.toLowerCase()];if(typeof e<"u")return e;throw new Error(`Unknown log level: ${r}`)}class ye{configureLogging(e){if(p.isRequired(e,"logging"),Le(e))this.logger=e;else if(typeof e=="string"){const t=Ee(e);this.logger=new K(t)}else this.logger=new K(e);return this}withUrl(e,t){return p.isRequired(e,"url"),p.isNotEmpty(e,"url"),this.url=e,typeof t=="object"?this.httpConnectionOptions={...this.httpConnectionOptions,...t}:this.httpConnectionOptions={...this.httpConnectionOptions,transport:t},this}withHubProtocol(e){return p.isRequired(e,"protocol"),this.protocol=e,this}withAutomaticReconnect(e){if(this.reconnectPolicy)throw new Error("A reconnectPolicy has already been set.");return e?Array.isArray(e)?this.reconnectPolicy=new X(e):this.reconnectPolicy=e:this.reconnectPolicy=new X,this}build(){const e=this.httpConnectionOptions||{};if(e.logger===void 0&&(e.logger=this.logger),!this.url)throw new Error("The 'HubConnectionBuilder.withUrl' method must be called before building the connection.");const t=new me(this.url,e);return H.create(t,this.logger||k.instance,this.protocol||new Se,this.reconnectPolicy)}}function Le(r){return r.log!==void 0}var m=(r=>(r.USD="USD",r.EUR="EUR",r.CAD="CAD",r.GBP="GBP",r.SGD="SGD",r.RUB="RUB",r.CNY="CNY",r.BTC="BTC",r))(m||{}),ke={version:"5.0.0",rpcUrl:"https://mainnet.api.tez.ie",availableRpcUrls:["https://mainnet.api.tez.ie","https://eu01-node.teztools.net","https://teznode.letzbake.com/","https://mainnet.smartpy.io"],validFiats:[{code:m.USD,name:"US dollar",symbol:"$"},{code:m.EUR,name:"Euro",symbol:"\u20AC"},{code:m.CAD,name:"Canadian Dollar",symbol:"CA$"},{code:m.GBP,name:"British pound",symbol:"\xA3"},{code:m.SGD,name:"Singapore dollar",symbol:"S$"},{code:m.RUB,name:"Russian ruble",symbol:"\u20BD"},{code:m.CNY,name:"Chinese yuan",symbol:"\xA5"},{code:m.BTC,name:"Bitcoin",symbol:"\u20BF"}],lbContracts:["KT1TxqZ8QtKvLu3V3JH7Gx58n7Co8pgtpQU5","KT1AafHA1C1vk959wvHWBispY9Y2f3fxBUUo"],kolibriOvenOwnersUrl:"https://kolibri-data.s3.amazonaws.com/mainnet/oven-key-data.json",kusdLiquidityPoolAddress:"KT1AxaBxkFLCUi3f8rdDAAxBKHfzY8LfKDRA",quipuswapFactories:{fa1_2Factory:["KT1FWHLMk5tHbwuSsp31S4Jum4dTVmkXpfJw","KT1Lw8hCoaBrHeTeMXbqHPG4sS4K1xn7yKcD"],fa2Factory:["KT1PvEyN1xCFCgorN92QCfYjw3axS6jawCiJ","KT1SwH9P1Tx8a58Mm6qBExQFTcy2rwZyZiXS"]},plentyDexAddresses:{"PLENTY-wBUSD":"KT1XXAavg3tTj12W1ADvd3EEnm1pu6XTmiEF","PLENTY-wUSDC":"KT1PuPNtDFLR6U7e7vDuxunDoKasVT6kMSkz","PLENTY-wWBTC":"KT19Dskaofi6ZTkrw3Tq4pK7fUqHqCz4pTZ3","PLENTY-USDtz-LP":"KT1D36ZG99YuhoCRZXLL86tQYAbv36bCq9XM","PLENTY-wMATIC-LP":"KT1VeNQa4mucRj36qAJ9rTzm4DTJKfemVaZT","PLENTY-wLINK-LP":"KT1XVrXmWY9AdVri6KpxKo4CWxizKajmgzMt","PLENTY-QUIPU-LP":"KT1NtsnKQ1c3rYB12ZToP77XaJs8WDBvF221","PLENTY-tzBTC-LP":"KT1HaDP8fRW7kavK2beST7o4RvzuvZbn5VwV","PLENTY-WRAP-LP":"KT1C2SXoGcje3VVMJHKRVhYXuWuNmv5ztJcw","PLENTY-UNO-LP":"KT1Wu8fGYxX5DfxYP8P97ZUNzrXFKjsWm7dD","PLENTY-SMAK-LP":"KT1BEC9uHmADgVLXCm3wxN52qJJ85ohrWEaU","PLENTY-KALAM-LP":"KT1HZkD2T4uczgYkZ6fb9gm1fymeJoRuezLz","PLENTY-hDAO-LP":"KT1XutoFJ9dXvWxT7ttG86N2tSTUEpatFVTm","PLENTY-ETHtz-LP":"KT1AbuUaPQmYLsB8n8FdSzBrxvrsm8ctwW1V","PLENTY-wWETH-LP":"KT1HUnqM6xFJa51PM2xHfLs7s6ARvXungtyq","PLENTY-kUSD-LP":"KT1UNBvCJXiwJY6tmHM7CJUVwNPew53XkSfh","PLENTY-uUSD-LP":"KT1Cba383ZJpEearqnUyUKUMsgu5Z3TXBgeH","PLENTY-wUSDT":"KT1Bi4yoALg6tuP4PKaFNDtSsDdpGLrDiGAS","PLENTY-wDAI-LP":"KT1KDmpYSDogNtEtEnEaHQLaySuqLr8aEfJW","PLENTY-YOU-LP":"KT1EM6NjJdJXmz3Pj13pfu3MWVDwXEQnoH3N","PLENTY-Ctez-LP":"KT1C9gJRfkpPbNdBn3XyYbrUHT6XgfPzZqXP","uUSD-YOU-LP":"KT1TnrLFrdemNZ1AnnWNfi21rXg7eknS484C","uUSD-wUSDC-LP":"KT1JbUFVGrMCpW39UtH97dMkG2nMMrefQLLa","uUSD-uDEFI-LP":"KT1EAw8hL5zseB3SLpJhBqPQfP9aWrWh8iMW","Ctez-kUSD-LP":"KT1X1nkqJDR1UHwbfpcnME5Z7agJLjUQNguB","Ctez-PAUL-LP":"KT1LixgLzdK4nseeD6MmmVpokuw9CvpVX9KW","Ctez-wWBTC-LP":"KT1XPUvZHc1YKTJYnGbB755V95hDgvS1qQYf","Ctez-USDtz-LP":"KT1PWAXfPatPWBNJUxTHin4ECin1kYJHHnsr","Ctez-wUSDC-LP":"KT1PZpbmKtGE6ZyYeF8entfjuGGT7CRUCF5g","Ctez-wUSDT-LP":"KT1AfTwam4bNPawLv4bWqSj9GsVDPsf5F5bQ","Ctez-wBUSD-LP":"KT1GN7PHpFsH43ypFyE2hxNMdxqTuiCGm4Pm","Ctez-wDAI-LP":"KT1L5qd9xPWjiEX6ZNovhaty228ASg6jCE5p","Ctez-KALAM-LP":"KT1HuZVo3ZKRhkaHDsYXZ2fvmVfkY1FrbEDj","Ctez-GIF-LP":"KT1VnFPwDGJRt5ufMgcWafM2WWcZCC77gpT3","Ctez-ETHtz-LP":"KT1GSYhwanehtwCK3NPfkMFbD1bNQmvosbqL","Ctez-QUIPU-LP":"KT1Ss8rb1UFVqG2LYEU5g4NEbK5SqW5Xadwp","Ctez-hDAO-LP":"KT1RSxExbbRwQdYBpRHWup9vxvw1Hp25vFVM","Ctez-kDAO-LP":"KT1SP9WsMeLFTiHBXqEumTASYbF3CXh22aVV","Ctez-wWETH-LP":"KT1WwqM2MH38PSQbECxPngBVLSbqJUHzCFAH","Ctez-uUSD-LP":"KT1Rx3pQzsn4FBuuYhcWsqUS7vWFx3ktqSWD","Ctez-FLAME-LP":"KT1Bp3JAeeMP4GvJaspFw6zah6WydqqqHPNw","Ctez-SMAK-LP":"KT1Qg4FmXDmViQgyYLT5QkgZQSmPKvKjZbzn","Ctez-crDAO-LP":"KT1JkHBYp3Pq4TRSkFdc2CRoXFgDkJrfCqUe","Ctez-PXL-LP":"KT1WR19YA8Go6GbTvtrMpUEEGSuQYxgz2ZVW","Ctez-UNO-LP":"KT1XLFZ2RS8vCUmHwBG39mq7zELhnLKn9JUz","Ctez-WRAP-LP":"KT19Qe4KbEVAiaVeNsgo9Tkqa6qvZho8c4W5","Ctez-tzBTC-LP":"KT1Wryxte8NnVCm569yb8dcSPmvFBVs4ufD6","Ctez-INSTA-LP":"KT1EnESbHxmzd2XeENyYNege4L5TKxeatJk9","Ctez-CRUNCH-LP":"KT1WZztBneC9NrhVqvo9yXq8St7p8c1JVTxm","PLENTY-CTEZ-TEZ-LP":"KT1CAYNQGvYSF5UvHK21grMrKpe2563w9UcX","PLENTY-BUSDE-USDCE-LP":"KT1LutmpUK8TDkA19tLCQNr7Eh7kbEsP3uiP","PLENTY-KUSD-USDCE-LP":"KT1HgFcDE8ZXNdT1aXXKpMbZc6GkUS2VHiPo","PLENTY-USDTZ-USDCE-LP":"KT1995R6hTYzXjV52mGtf6MboPRhzbJBJe6q","PLENTY-KUSD-USDT-LP":"KT1XfZi2K6gVM3wXDyeCwMhaT88JueVEAB8r","PLENTY-UUSD-USDT-LP":"KT19XPttmgtKtnpKXbcn41AqbcUqX7cweAmu","PLENTY-DAIE-USDCE-LP":"KT1Hxn43imdKTWXEZsLVdoUsS1R4hWTSXgDs","PLENTY-UUSD-USDCE-LP":"KT1Ji4hVDeQ5Ru7GW1Tna9buYSs3AppHLwj9"},plentyLptAddresses:{"PLENTY-wBUSD-LP":"KT1UC3vcVZ4K9b39uQxaMNA2N1RuJXKLCnoA","PLENTY-wUSDC-LP":"KT1Gz1mx1jm7JHqU7GuMVWF6soB9RjsfLN3o","PLENTY-wWBTC-LP":"KT1La1qZiJtDRcd9ek8w5KYD47i9MQqAQHmP","PLENTY-wMATIC-LP":"KT1WCGPFvy97wwGxewKfvTr1QYPvpEgUKToS","PLENTY-wLINK-LP":"KT1Brqb3JvXNKzwjW82F8pUAxQ7ipCfApWki","PLENTY-USDtz-LP":"KT18qSo4Ch2Mfq4jP3eME7SWHB8B8EDTtVBu","PLENTY-hDAO-LP":"KT1B2SzTBtb7PgTePbDLV5BmUZQ2PC1sdSHZ","PLENTY-ETHtz-LP":"KT1VvcbAjMWHVUbhLENpiVBejbzXYDt3PusE","PLENTY-wWETH-LP":"KT1SULRhejhoBWUmMnU53YHJrQZ3rxqsamdm","PLENTY-kUSD-LP":"KT1XTpd8JPexGxBL2dAmU9h2o9fcd9LEUG2t","PLENTY-QUIPU-LP":"KT1VDSyTqS95wkB4tRGy6saMa4izRKwrEg26","PLENTY-tzBTC-LP":"KT1SqQimKz3RbQbckpSHhn4nanUmDuRqkFH3","PLENTY-WRAP-LP":"KT1AHndbp9xVpaJrfTHfYzSXKHDVHMdKxcW2","PLENTY-UNO-LP":"KT1B6ALzWXQp5wUavuo2VTMNjRdTGm8wx37w","PLENTY-KALAM-LP":"KT1G3QTnrpWNhZr9x3Prprw3GH6gAMqV113D","PLENTY-SMAK-LP":"KT1NLZah1MKeWuveQvdsCqAUCjksKw8J296z","PLENTY-uUSD-LP":"KT1E8CrG6uznYAG9vZVGtApMJwwTScxPEUKq","PLENTY-wUSDT-LP":"KT1PcM1LUqgVdkXqKvZ4CeC9aiwLgYYCEHMH","PLENTY-wDAI-LP":"KT19vdNapeT6MALXvkvW745KiVKGXmD4AZq5","PLENTY-YOU-LP":"KT1UaU5fbSYqYeFmhmsjLkqQXZ1ZG54Qs2vh","kUSD-USDtz-LP":"KT1HEdGi7rq1zgZ68dhAtKMZYKeD3EM5vYdf","wUSDC-USDtz-LP":"KT1FaoPYSyT4itmgTncvdshV7SeqqXk9RJXd","wWETH-ETHtz-LP":"KT1GubVxQVJucUJfJvysvAJKWpLwj3LKuWHn","PLENTY-Ctez-LP":"KT1LdX5pUkZZGwYPePcAFSpETbqfbGCwJpfw","uUSD-YOU-LP":"KT1Tmncfgpp4ZSp6aEogL7uhBqHTiKsSPegK","uUSD-wUSDC-LP":"KT1A2W6mBjn49yqzjJbt9T7xNVD9gDeL45qD","uUSD-uDEFI-LP":"KT1RQvdYD9yc763j8FiVLyXbKPVVbZqGRx5m","Ctez-kUSD-LP":"KT19bFNh8pZCRtTy7Pi9kpEcb2Yd7KWArAik","Ctez-USDtz-LP":"KT1DQfEUBsaZo43G3j1CbFF9BiWZXS72DuCh","Ctez-wUSDC-LP":"KT1SXZTX9ZCW5atMnBng1y4pmdS2xi231oMt","Ctez-wUSDT-LP":"KT1KgCx6CYVSyLxfiFdo5hVuMwZBPQy1XZaf","Ctez-wBUSD-LP":"KT1K7GRKUWzfNJ9jzGprb13XDVqqp6GE67ZU","Ctez-wDAI-LP":"KT1VLLdUaMfFbJw87b1PaVG1ac6UYM5xzqC5","Ctez-KALAM-LP":"KT1N3mKQMnWEwt4FB3J4qP2X8LwYgndGDZrn","Ctez-GIF-LP":"KT1KdPxrn7UTx6CUWxuUBaGx4bVv6ZJKWUWr","Ctez-ETHtz-LP":"KT1GAvdLT9tkpKkRmkuChuL9T83esBtatgKm","Ctez-QUIPU-LP":"KT1C6Q4Mnnpns8vSQy7kJitZNMsED24SMw9m","Ctez-hDAO-LP":"KT1DidqBuSaxGbVaDq2gLVkfh262dYyoGeSH","Ctez-kDAO-LP":"KT1KmkH1T2CQV2Q5AcMeZy3GHhwNac48FBap","Ctez-wWETH-LP":"KT1BAiXZkKG4R9W7LAKiAQahC8Wg7ZpJBaEs","Ctez-uUSD-LP":"KT1BX8F7Xrtsy1tJ91iLovu4nJ8ZyVv4Dac2","Ctez-FLAME-LP":"KT1UfvQiYexnpag6rZ3LMGsn5YFiEHrXrtbq","Ctez-SMAK-LP":"KT1NeR3ExLddfdAbs5nwpQMm6DqBekyJTc4R","Ctez-crDAO-LP":"KT1MQcJCLZL8ASHYGmT5LVzeXV64ruy7RAuH","Ctez-PXL-LP":"KT1GhzTxzgXgdv1rRCppAB5D4poXiUgp8yoU","Ctez-UNO-LP":"KT1WKWhTNMY4h4eHunbsnJ1oAtDWXCz4qNQm","Ctez-WRAP-LP":"KT1MX73dim8HKqQLjTHvkJnpRUp37C1HXdkt","Ctez-wWBTC-LP":"KT1XWRUcvtcgpsETcasdUnNkq9rJeWmz8ihD","Ctez-tzBTC-LP":"KT1TMZjKBvSVKzETZTyRsTxYEu4uZLLs6VpJ","Ctez-PAUL-LP":"KT1N93veCzepAPydFGGUhDFiA69PoawasxXi","Ctez-INSTA-LP":"KT1GkTwzN2gR6UdBicDSu2JEaRtv5KAPunrj","Ctez-CRUNCH-LP":"KT1QSA2SMDEKzEnJhGrVGheWb94Ux8Wyfuy6","PLENTY-BUSDE-USDCE-LP":"KT1G76qEBDqmAXLCCVg4ZuNbrENsxFe8aECe","PLENTY-KUSD-USDCE-LP":"KT1J5HNUXnQwonSam3kmDQ5WbhynPPpVtgdN","PLENTY-USDTZ-USDCE-LP":"KT1P9GyfYrW9EZ8m3jej2cMu49fpmEbYa2h5","PLENTY-KUSD-USDT-LP":"KT1JaYzZooZmq9JP9FScjLShbUco8Pn8Ckct","PLENTY-UUSD-USDT-LP":"KT1Doix5iZZsQzKY3ANDkoca6GfCtJbXY9sk","PLENTY-DAIE-USDCE-LP":"KT1TupjqgajsoArMKK3ifmNveKhU2XpTJrH8","PLENTY-UUSD-USDCE-LP":"KT1Ah4Fe2hjcRdVCiCQDhRDZ2vDYLdYNjY51"},wrapLiquidityMiningDexAddress:{"WRAP-XTZ-LM":"KT1FG63hhFtMEEEtmBSX2vuFmP87t9E7Ab4t","wBUSD-XTZ-LM":"KT1UMAE2PBskeQayP5f2ZbGiVYF7h8bZ2gyp","wDAI-XTZ-LM":"KT1PQ8TMzGMfViRq4tCMFKD2QF5zwJnY67Xn","wUSDC-XTZ-LM":"KT1U2hs5eNdeCpHouAvQXGMzGFGJowbhjqmo","wUSDT-XTZ-LM":"KT1T4pfr6NL8dUiz8ibesjEvH2Ne3k6AuXgn","wWBTC-XTZ-LM":"KT1DksKXvCBJN7Mw6frGj6y6F3CbABWZVpj1","wWETH-XTZ-LM":"KT1DuYujxrmgepwSDHtADthhKBje9BosUs1w"},vortexDexAddresses:{"XTZ-ANTI":"KT1VFUkjYDh6QG8iLx5uKHPU3BWFMeYoVPTL"},quipuFarmsContract:"KT1RdoweZPFjttwMUsaTo1E2EWNX3WcR9nxZ",lbContractAddress:"KT1TxqZ8QtKvLu3V3JH7Gx58n7Co8pgtpQU5",lqtContractAddress:"KT1AafHA1C1vk959wvHWBispY9Y2f3fxBUUo",matterFarms:{KT1UefQz7nP8BuuDk5Dd5LWo22N1ZPB7JB5o:"MATTER-uUSD-wTZ"}};const N=self;let M,y,S;const Z=async(r,e)=>{const t=await fetch(`https://api.tzkt.io/v1/contracts/${ke.lbContractAddress}/storage`);if(t&&t.status===200){const{tokenPool:n,xtzPool:o,lqtTotal:s}=await t.json();N.postMessage({type:"lb-data",payload:{tokenPool:n,xtzPool:o,lqtTotal:s}})}S=new ye().withUrl("https://api.tzkt.io/v1/events").build(),await S.start(),await S.invoke("SubscribeToHead"),S.onclose(Z),S.on("head",async n=>{n.type!==0&&N.postMessage({type:"new-level",payload:n.data.level})}),S.on("transfers",n=>{if(console.log("transfers",n),n.type!==0){const o=n.data.map(s=>{const{amount:a,from:l,to:c,token:h}=s;return a&&l&&c&&h?{amount:isNaN(+a)?null:+a,from:l,to:c,token:h.contract.alias,tokenId:h.standard==="fa2"?h.tokenId:null,tokenAddress:h.contract.address,inOrOut:l.address===M?"out":"in"}:(console.error("Missing token transfer data:",{amount:a,from:l,to:c,token:h}),null)});N.postMessage({type:"new-transfers",payload:o.filter(s=>s)})}})};N.addEventListener("message",async r=>{r.data.type==="init"?(console.log("init from worker"),y=r.data.payload,Z([...Object.values(y.tokens).map(e=>e.address),...y.farms.map(e=>e.address),...y.vaults,...y.lbDex],y.rpcUrl)):r.data.type==="new-user"&&(M=r.data.payload,await S.invoke("SubscribeToTokenTransfers",{account:M}))})})();
